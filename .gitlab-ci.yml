stages:
  - build
  - test
  - docker-build
  - deploy

build:
  image: ruby:3.2.2
  stage: build
  artifacts:
    paths:
      - _site
    expire_in: 1 week
  retry: 2
  script:
    - gem install bundler
    - bundle config set --local path 'vendor/ruby'
    - bundle install
    - JEKYLL_ENV=production bundle exec jekyll b

test:
  image: ruby:3.2.2
  stage: test
  script:
    - gem install bundler
    - bundle config set --local path 'vendor/ruby'
    - bundle install
    - bundle exec jekyll build -d test
  artifacts:
    paths:
    - test

docker-build:
  stage: docker-build
  image: docker:latest
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - echo $CI_REGISTRY
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
    - echo "Registry image:" $CI_REGISTRY_IMAGE

deploy:
  stage: deploy
  image: kroniak/ssh-client
  before_script:
    - echo "deploying app"
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan $PROD_GAMMA_SERVER_IP -H  >> ~/.ssh/known_hosts
  script:
    - ssh nhat@$PROD_GAMMA_SERVER_IP "sudo docker pull fleeforezz/jso-blog"
    - ssh nhat@$PROD_GAMMA_SERVER_IP "sudo docker stop jso-blog || true && sudo docker rm jso-blog || true"
    - ssh nhat@$PROD_GAMMA_SERVER_IP "sudo docker run -p 4000:80 -d --restart unless-stopped --name jso-blog fleeforezz/jso-blog"
